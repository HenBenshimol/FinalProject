
@{
    ViewBag.Title = "Diagnostics";
}
<canvas class="myCanvas" id="myCanvas" width="600" height="50">
    Your browser does not support the canvas element.
</canvas>
<script>
    var canvas = document.getElementById("myCanvas");
    var ctx = canvas.getContext("2d");
    ctx.font = "30px Palatino Linotype";

    // Create gradient
    var grd = ctx.createLinearGradient(0, 500, 750, 0);
    grd.addColorStop(0, "MidnightBlue");
    //grd.addColorStop(1, "DeepSkyBlue");
    grd.addColorStop(1, "Aqua");


    // Fill with gradient
    ctx.fillStyle = "#2d2d2d;";
    ctx.textAlign = "center";
    ctx.fillText("Graph of articles views", canvas.width / 2, canvas.height / 2);
</script>
<hr />

<meta charset="utf-8">
<svg width="960" height="500"></svg>
<style>
    .bar {
        fill: #a81414;
    }

        .bar:hover {
            fill: #d11b1b;
        }

    .toolTip {
        position: absolute;
        text-align: center;
        padding: 8px;
        border: none;
        border-radius: 8px;
        margin-top: -30px;
        font: 14px sans-serif;
        background: black;
        color: white;
        pointer-events: none;
    }
</style>
<script src="https://d3js.org/d3.v5.min.js"></script>
<script>

    var svg = d3.select("svg"),
        margin = {
            top: 15,
            right: 15,
            bottom: 30,
            left: 60
        },

        width = +svg.attr("width") - margin.left - margin.right,
        height = +svg.attr("height") - margin.top - margin.bottom,
        g = svg.append("g").attr("transform", "translate(" + margin.left + "," + margin.top + ")");

    var tooltip = d3.select("body").append("div").attr("class", "toolTip");

    var y = d3.scaleBand()
        .rangeRound([height, 0])
        .padding(0.1);

    var x = d3.scaleLinear()
        .rangeRound([0, width]);

    var testi = d3.json("json");

    d3.json("json").then(function (data) {

        // format the data
        data.forEach(function (d) {
            d.total = +d.total;
        });

        x.domain([0, d3.max(data, function (d) { return d.total; })]);
        y.domain(data.map(function (d) { return d.articleTitle; }));

        // add the x Axis
        svg.append("g")
            .attr("transform", "translate(0," + height + ")")
            .call(d3.axisBottom(x))


        // add the y Axis
        svg.append("g")
            .call(d3.axisLeft(y));

        // append the rectangles for the bar chart
        svg.selectAll(".bar")
            .data(data)
            .enter().append("rect")
            .attr("class", "bar")
            .attr("width", function (d) { return x(d.total); })
            .attr("y", function (d) { return y(d.articleTitle); })
            .attr("height", y.bandwidth())
            .on("mousemove", function (d) {
                tooltip
                    .style("left", d3.event.pageX - 50 + "px")
                    .style("top", d3.event.pageY - 70 + "px")
                    .style("display", "inline-block")
                    .html((d.articleTitle) + "<br>" + "Views: " + (d.total));
            })
            .on("mouseout", function (d) { tooltip.style("display", "none"); });

    });

</script>